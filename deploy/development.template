apiVersion: v1
kind: Namespace
metadata:
  name: ${DRONE_REPO_NAME}
---
apiVersion: v1
kind: Secret
metadata:
  name: ligatokensregistry
  namespace: ${DRONE_REPO_NAME}
data:
  .dockerconfigjson: ${DOCKER_TOKEN}
type: kubernetes.io/dockerconfigjson
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ${DRONE_REPO_NAME}-deployment
  namespace: ${DRONE_REPO_NAME}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      application: ${DRONE_REPO_NAME}
  template:
    metadata:
      labels:
        application: ${DRONE_REPO_NAME}
      annotations:
        revision: "${DRONE_BUILD_NUMBER}"
    spec:
      nodeSelector:
        zone: dev
      containers:
        - name: ${DRONE_REPO_NAME}-stage
          image: registry.ligatokens.io/${DRONE_REPO_NAME}:mater
          imagePullPolicy: Always
          env:
            - name: DB_HOST
              value: pgbouncer-stage-service.postgres
            - name: DB_PORT
              value: "6432"
            - name: TELEGRAM_TOKEN
              value: "887861483:AAE_zlmyFdkSEU617BSx-wWMIHgPOFhzP60"
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PASSWORD
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
      imagePullSecrets:
        - name: ligatokensregistry